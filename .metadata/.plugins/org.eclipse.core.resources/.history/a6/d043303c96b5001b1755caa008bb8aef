#include "stm32f10x.h"
#include "pwm.h"


// всякие переменные
unsigned long count_test = 0;
int triger = 0;



void init_timer1(void)
{

	RCC->APB2ENR|= RCC_APB2ENR_TIM1EN;
/*
    TIM1->CCMR1 =  TIM_CCMR1_OC1M_2 |TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1PE | TIM_CCMR1_OC2M_2 |TIM_CCMR1_OC2M_1 | TIM_CCMR1_OC2PE;
    TIM1->CCMR2 =  TIM_CCMR2_OC3M_2 |TIM_CCMR2_OC3M_1 | TIM_CCMR2_OC3PE;

    TIM1->CR2 = TIM_CR2_OIS1 | TIM_CR2_OIS1N;


    TIM1->CCER =TIM_CCER_CC1E | TIM_CCER_CC1NE | TIM_CCER_CC2E | TIM_CCER_CC2NE| TIM_CCER_CC3E | TIM_CCER_CC3NE;	// разрешение комплиментарного режима.
   // TIM1->BDTR =TIM_BDTR_MOE | TIM_BDTR_OSSI | TIM_BDTR_OSSR | DEADTIME;
    TIM1->BDTR =TIM_BDTR_MOE |  DEADTIME;


    TIM1->ARR =TMR_T;							// регистр автоматической перезагрузки
    TIM1->EGR =TIM_EGR_UG;						// Регистр генерации событий. генерация перезагрузки
    TIM1->CR1 =TIM_CR1_ARPE | TIM_CR1_CEN;		// разрешить буферизированный режим записи в регистр перезагрузки, разрешить работу счётчика

   */

	TIM1->CR1 |= TIM_CR1_ARPE; 				//shadow
	TIM1->CR1 |= TIM_CR1_DIR;

	TIM1->PSC = 71;							// 72MHz/(PSC+1)	один тик  - 1 мкс
	TIM1->ARR = 1000;						// 1000 - 1 мс

	TIM3->DIER |= TIM_DIER_UIE;
	TIM3->CR1 |= TIM_CR1_CEN;

	NVIC_EnableIRQ (TIM1_IRQn);

}

void TIM1_CC_IRQHandler (void)
{

}






void init_timer3(void)						// Настройка таймера 3. Общий для отсчётов задержек
{
	RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
	TIM3->CR1 |= TIM_CR1_ARPE; 				//shadow
	TIM3->CR1 |= TIM_CR1_DIR;

	TIM3->PSC = 71;							// 72MHz/(PSC+1)	один тик  - 1 мкс
	TIM3->ARR = 500;						// 1000 - 1 мс
											// 50 - 55,55 гц
											// 25 - 111,111 гц

	TIM3->DIER |= TIM_DIER_UIE;
	TIM3->CR1 |= TIM_CR1_CEN;

	NVIC_EnableIRQ (TIM3_IRQn);
}


void TIM3_IRQHandler (void)									// обработчик таймера для ШД
{
	unsigned short status;
	status = TIM3->SR;
	TIM3->SR = ~status;

	if(status & TIM_SR_UIF)
	{


			if(triger == 0)
			{
				triger = 1;

				relay_2(on);

			}
			else
			{
				triger = 0;

				relay_2(off);

			}



	}
} // скобка TIM3_IRQHandler







